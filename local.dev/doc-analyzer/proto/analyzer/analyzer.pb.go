// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: proto/analyzer.proto

package analyzer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос для анализа файла
type AnalyzeFileRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	FileId            string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	GenerateWordCloud bool                   `protobuf:"varint,2,opt,name=generate_word_cloud,json=generateWordCloud,proto3" json:"generate_word_cloud,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AnalyzeFileRequest) Reset() {
	*x = AnalyzeFileRequest{}
	mi := &file_proto_analyzer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeFileRequest) ProtoMessage() {}

func (x *AnalyzeFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analyzer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeFileRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_analyzer_proto_rawDescGZIP(), []int{0}
}

func (x *AnalyzeFileRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *AnalyzeFileRequest) GetGenerateWordCloud() bool {
	if x != nil {
		return x.GenerateWordCloud
	}
	return false
}

// Ответ на запрос анализа
type AnalyzeFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WordCount     int32                  `protobuf:"varint,1,opt,name=word_count,json=wordCount,proto3" json:"word_count,omitempty"`
	UniqueWords   int32                  `protobuf:"varint,2,opt,name=unique_words,json=uniqueWords,proto3" json:"unique_words,omitempty"`
	Summary       string                 `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeFileResponse) Reset() {
	*x = AnalyzeFileResponse{}
	mi := &file_proto_analyzer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeFileResponse) ProtoMessage() {}

func (x *AnalyzeFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analyzer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeFileResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_analyzer_proto_rawDescGZIP(), []int{1}
}

func (x *AnalyzeFileResponse) GetWordCount() int32 {
	if x != nil {
		return x.WordCount
	}
	return 0
}

func (x *AnalyzeFileResponse) GetUniqueWords() int32 {
	if x != nil {
		return x.UniqueWords
	}
	return 0
}

func (x *AnalyzeFileResponse) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

// Запрос облака слов
type GetWordCloudRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Location      string                 `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWordCloudRequest) Reset() {
	*x = GetWordCloudRequest{}
	mi := &file_proto_analyzer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWordCloudRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWordCloudRequest) ProtoMessage() {}

func (x *GetWordCloudRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analyzer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWordCloudRequest.ProtoReflect.Descriptor instead.
func (*GetWordCloudRequest) Descriptor() ([]byte, []int) {
	return file_proto_analyzer_proto_rawDescGZIP(), []int{2}
}

func (x *GetWordCloudRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

// Ответ с облаком слов
type GetWordCloudResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         []byte                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWordCloudResponse) Reset() {
	*x = GetWordCloudResponse{}
	mi := &file_proto_analyzer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWordCloudResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWordCloudResponse) ProtoMessage() {}

func (x *GetWordCloudResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_analyzer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWordCloudResponse.ProtoReflect.Descriptor instead.
func (*GetWordCloudResponse) Descriptor() ([]byte, []int) {
	return file_proto_analyzer_proto_rawDescGZIP(), []int{3}
}

func (x *GetWordCloudResponse) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

var File_proto_analyzer_proto protoreflect.FileDescriptor

const file_proto_analyzer_proto_rawDesc = "" +
	"\n" +
	"\x14proto/analyzer.proto\x12\banalyzer\"]\n" +
	"\x12AnalyzeFileRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12.\n" +
	"\x13generate_word_cloud\x18\x02 \x01(\bR\x11generateWordCloud\"q\n" +
	"\x13AnalyzeFileResponse\x12\x1d\n" +
	"\n" +
	"word_count\x18\x01 \x01(\x05R\twordCount\x12!\n" +
	"\funique_words\x18\x02 \x01(\x05R\vuniqueWords\x12\x18\n" +
	"\asummary\x18\x03 \x01(\tR\asummary\"1\n" +
	"\x13GetWordCloudRequest\x12\x1a\n" +
	"\blocation\x18\x01 \x01(\tR\blocation\",\n" +
	"\x14GetWordCloudResponse\x12\x14\n" +
	"\x05image\x18\x01 \x01(\fR\x05image2\xac\x01\n" +
	"\x0fAnalyzerService\x12J\n" +
	"\vAnalyzeFile\x12\x1c.analyzer.AnalyzeFileRequest\x1a\x1d.analyzer.AnalyzeFileResponse\x12M\n" +
	"\fGetWordCloud\x12\x1d.analyzer.GetWordCloudRequest\x1a\x1e.analyzer.GetWordCloudResponseB0Z.local.dev/doc-analyzer/proto/analyzer;analyzerb\x06proto3"

var (
	file_proto_analyzer_proto_rawDescOnce sync.Once
	file_proto_analyzer_proto_rawDescData []byte
)

func file_proto_analyzer_proto_rawDescGZIP() []byte {
	file_proto_analyzer_proto_rawDescOnce.Do(func() {
		file_proto_analyzer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_analyzer_proto_rawDesc), len(file_proto_analyzer_proto_rawDesc)))
	})
	return file_proto_analyzer_proto_rawDescData
}

var file_proto_analyzer_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_analyzer_proto_goTypes = []any{
	(*AnalyzeFileRequest)(nil),   // 0: analyzer.AnalyzeFileRequest
	(*AnalyzeFileResponse)(nil),  // 1: analyzer.AnalyzeFileResponse
	(*GetWordCloudRequest)(nil),  // 2: analyzer.GetWordCloudRequest
	(*GetWordCloudResponse)(nil), // 3: analyzer.GetWordCloudResponse
}
var file_proto_analyzer_proto_depIdxs = []int32{
	0, // 0: analyzer.AnalyzerService.AnalyzeFile:input_type -> analyzer.AnalyzeFileRequest
	2, // 1: analyzer.AnalyzerService.GetWordCloud:input_type -> analyzer.GetWordCloudRequest
	1, // 2: analyzer.AnalyzerService.AnalyzeFile:output_type -> analyzer.AnalyzeFileResponse
	3, // 3: analyzer.AnalyzerService.GetWordCloud:output_type -> analyzer.GetWordCloudResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_analyzer_proto_init() }
func file_proto_analyzer_proto_init() {
	if File_proto_analyzer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_analyzer_proto_rawDesc), len(file_proto_analyzer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_analyzer_proto_goTypes,
		DependencyIndexes: file_proto_analyzer_proto_depIdxs,
		MessageInfos:      file_proto_analyzer_proto_msgTypes,
	}.Build()
	File_proto_analyzer_proto = out.File
	file_proto_analyzer_proto_goTypes = nil
	file_proto_analyzer_proto_depIdxs = nil
}
